class MessageBlips {
    constructor() {
        const map = new CharacterMap();

        map.add('a', "     ",
            "     ",
            "     ",
            " *** ",
            "*  * ",
            "*  * ",
            " *** ");

        map.add('b', "*    ",
            "*    ",
            "*    ",
            "***  ",
            "*  * ",
            "*  * ",
            "***  ");

        map.add('c', "     ",
            "     ",
            " **  ",
            "*  * ",
            "*    ",
            "*  * ",
            " **  ");

        map.add('d', "   * ",
            "   * ",
            "   * ",
            " *** ",
            "*  * ",
            "*  * ",
            " *** ");

        map.add('e', "     ",
            "     ",
            " **  ",
            "*  * ",
            "**** ",
            "*    ",
            " **  ");

        map.add('f', " **  ",
            "*  * ",
            "*    ",
            "***  ",
            "*    ",
            "*    ",
            "*    ");

        map.add('g', "     ",
            " **  ",
            "*  * ",
            "*  * ",
            " *** ",
            "   * ",
            " **  ");

        map.add('h', "*    ",
            "*    ",
            "*    ",
            "***  ",
            "*  * ",
            "*  * ",
            "*  * ");

        map.add('i', "     ",
            " *   ",
            "     ",
            " *   ",
            " *   ",
            " *   ",
            " *   ");

        map.add('j', "     ",
            "   * ",
            "     ",
            "   * ",
            "   * ",
            "*  * ",
            " *** ");

        map.add('k', "*    ",
            "*    ",
            "*  * ",
            "* *  ",
            "**   ",
            "* *  ",
            "*  * ");

        map.add('l', "**   ",
            " *   ",
            " *   ",
            " *   ",
            " *   ",
            " *   ",
            "***  ");

        map.add('m', "     ",
            "     ",
            "** **",
            "* * *",
            "*   *",
            "*   *",
            "*   *");

        map.add('n', "     ",
            "     ",
            "***  ",
            "*  * ",
            "*  * ",
            "*  * ",
            "*  * ");

        map.add('o', "     ",
            "     ",
            " **  ",
            "*  * ",
            "*  * ",
            "*  * ",
            " **  ");

        map.add('p', "     ",
            "***  ",
            "*  * ",
            "*  * ",
            "***  ",
            "*    ",
            "*    ");

        map.add('q', "     ",
            " **  ",
            "*  * ",
            "*  * ",
            " *** ",
            "   * ",
            "   **");

        map.add('r', "     ",
            "     ",
            "***  ",
            "*  * ",
            "*    ",
            "*    ",
            "*    ");

        map.add('s', "     ",
            "     ",
            " **  ",
            "*    ",
            " **  ",
            "   * ",
            " **  ");

        map.add('t', "     ",
            "  *  ",
            "*****",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ");

        map.add('u', "     ",
            "     ",
            "     ",
            "*  * ",
            "*  * ",
            "*  * ",
            " **  ");

        map.add('v', "     ",
            "     ",
            "     ",
            "*   *",
            "*   *",
            " * * ",
            "  *  ");

        map.add('w', "     ",
            "     ",
            "     ",
            "*   *",
            "*   *",
            "* * *",
            "** **");

        map.add('x', "     ",
            "     ",
            "*   *",
            " * * ",
            "  *  ",
            " * * ",
            "*   *");

        map.add('y', "     ",
            "     ",
            "*  * ",
            "*  * ",
            " *** ",
            "   * ",
            " **  ");

        map.add('z', "     ",
            "     ",
            "     ",
            "**** ",
            "  *  ",
            " *   ",
            "**** ");

        map.add('A', "  *  ",
            " * * ",
            "*   *",
            "*   *",
            "*****",
            "*   *",
            "*   *");

        map.add('B', "**** ",
            "*   *",
            "*   *",
            "**** ",
            "*   *",
            "*   *",
            "**** ");

        map.add('C', " *** ",
            "*   *",
            "*    ",
            "*    ",
            "*    ",
            "*   *",
            " *** ");

        map.add('D', "**** ",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            "**** ");

        map.add('E', "*****",
            "*    ",
            "*    ",
            "**** ",
            "*    ",
            "*    ",
            "*****");

        map.add('F', "*****",
            "*    ",
            "*    ",
            "**** ",
            "*    ",
            "*    ",
            "*    ");

        map.add('G', " *** ",
            "*   *",
            "*    ",
            "*    ",
            "*  **",
            "*   *",
            " *** ");

        map.add('H', "*   *",
            "*   *",
            "*   *",
            "*****",
            "*   *",
            "*   *",
            "*   *");

        map.add('I', "*****",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ",
            "*****");

        map.add('J', "    *",
            "    *",
            "    *",
            "    *",
            "*   *",
            "*   *",
            " *** ");

        map.add('K', "*   *",
            "*  * ",
            "* *  ",
            "**   ",
            "* *  ",
            "*  * ",
            "*   *");

        map.add('L', "*    ",
            "*    ",
            "*    ",
            "*    ",
            "*    ",
            "*    ",
            "*****");

        map.add('M', "*   *",
            "** **",
            "** **",
            "* * *",
            "*   *",
            "*   *",
            "*   *");

        map.add('N', "*   *",
            "**  *",
            "**  *",
            "* * *",
            "* * *",
            "*  **",
            "*   *");

        map.add('O', " *** ",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            " *** ");

        map.add('P', "**** ",
            "*   *",
            "*   *",
            "**** ",
            "*    ",
            "*    ",
            "*    ");

        map.add('Q', " *** ",
            "*   *",
            "*   *",
            "*   *",
            "* * *",
            "*  **",
            " ****");

        map.add('R', "**** ",
            "*   *",
            "*   *",
            "**** ",
            "* *  ",
            "*  * ",
            "*   *");

        map.add('S', " *** ",
            "*   *",
            "*    ",
            " *** ",
            "    *",
            "*   *",
            " *** ");

        map.add('T', "*****",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ");

        map.add('U', "*   *",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            " *** ");

        map.add('V', "*   *",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            " * * ",
            "  *  ");

        map.add('W', "*   *",
            "*   *",
            "*   *",
            "* * *",
            "** **",
            "** **",
            "*   *");

        map.add('X', "*   *",
            "*   *",
            " * * ",
            "  *  ",
            " * * ",
            "*   *",
            "*   *");

        map.add('Y', "*   *",
            "*   *",
            "*   *",
            " * * ",
            "  *  ",
            "  *  ",
            "  *  ");

        map.add('Z', "*****",
            "    *",
            "   * ",
            "  *  ",
            " *   ",
            "*    ",
            "*****");

        map.add('0', " ***",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            "*   *",
            " ***");

        map.add('1', "  *  ",
            " **  ",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ",
            " *** ");

        map.add('2', " *** ",
            "*   *",
            "    *",
            "   * ",
            " **  ",
            "*    ",
            "*****");

        map.add('3', " *** ",
            "*   *",
            "    *",
            "  ** ",
            "    *",
            "*   *",
            " *** ");

        map.add('4', "   * ",
            "  ** ",
            " * * ",
            "*  * ",
            "*****",
            "   * ",
            "   * ");

        map.add('5', "*****",
            "*    ",
            "*    ",
            "**** ",
            "    *",
            "*   *",
            " *** ");

        map.add('6', " *** ",
            "*   *",
            "*    ",
            "**** ",
            "*   *",
            "*   *",
            " *** ");

        map.add('7', "*****",
            "    *",
            "    *",
            "   * ",
            "  *  ",
            " *   ",
            "*    ");

        map.add('8', " *** ",
            "*   *",
            "*   *",
            " *** ",
            "*   *",
            "*   *",
            " *** ");

        map.add('9', " *** ",
            "*   *",
            "*   *",
            " ****",
            "   * ",
            "  *  ",
            " *   ");

        map.add('-', "     ",
            "     ",
            "     ",
            "*****",
            "     ",
            "     ",
            "     ");

        map.add('+', "     ",
            "     ",
            "  *  ",
            "  *  ",
            "*****",
            "  *  ",
            "  *  ");

        map.add('(', "  *  ",
            " *   ",
            "*    ",
            "*    ",
            "*    ",
            " *   ",
            "  *  ");

        map.add(')', "  *  ",
            "   * ",
            "    *",
            "    *",
            "    *",
            "   * ",
            "  *  ");

        map.add('*', "     ",
            "  *  ",
            "  *  ",
            "*****",
            " * * ",
            "*   *",
            "     ");

        map.add('&', " *** ",
            "*   *",
            "*  * ",
            " **  ",
            " ** *",
            "*  * ",
            " ** *");

        map.add('^', "     ",
            "     ",
            "     ",
            "     ",
            "  *  ",
            " * * ",
            "*   *");

        map.add('%', " *   ",
            "* * *",
            " * * ",
            "  *  ",
            " * * ",
            "* * *",
            "   * ");

        map.add('$', "  *  ",
            " *** ",
            "*    ",
            " *** ",
            "    *",
            " *** ",
            "  *  ");

        map.add('#', "     ",
            " * * ",
            "*****",
            " * * ",
            "*****",
            " * * ",
            "     ");

        map.add('@', " *** ",
            "*   *",
            "*  **",
            "* * *",
            "*  * ",
            "*   *",
            " *** ");

        map.add('!', "  *  ",
            "  *  ",
            "  *  ",
            "  *  ",
            "  *  ",
            "     ",
            "  *  ");

        map.add('`', " *   ",
            "  *  ",
            "   * ",
            "     ",
            "     ",
            "     ",
            "     ");

        map.add('~', "     ",
            "     ",
            " *   ",
            "* * *",
            "   * ",
            "     ",
            "     ");

        map.add('?', " *** ",
            "*   *",
            "    *",
            "  ** ",
            "  *  ",
            "     ",
            "  *  ");

        map.add('/', "    *",
            "   * ",
            "   * ",
            "  *  ",
            " *   ",
            " *   ",
            "*    ");

        map.add('\\', "*    ",
            " *   ",
            " *   ",
            "  *  ",
            "   * ",
            "   * ",
            "    *");

        map.add(',', "     ",
            "     ",
            "     ",
            "     ",
            " *   ",
            " *   ",
            "*    ");

        map.add('.', "     ",
            "     ",
            "     ",
            "     ",
            "     ",
            "     ",
            " *   ");

        map.add('<', "    *",
            "   * ",
            "  *  ",
            " *   ",
            "  *  ",
            "   * ",
            "    *");

        map.add('>', "*    ",
            " *   ",
            "  *  ",
            "   * ",
            "  *  ",
            " *   ",
            "*    ");

        map.add('_', "     ",
            "     ",
            "     ",
            "     ",
            "     ",
            "     ",
            "*****");

        map.add('=', "     ",
            "     ",
            "*****",
            "     ",
            "*****",
            "     ",
            "     ");

        map.add(':', "     ",
            "     ",
            "     ",
            "  *  ",
            "     ",
            "  *  ",
            "     ");

        map.add(';', "     ",
            "     ",
            "     ",
            "  *  ",
            "     ",
            "  *  ",
            " *   ");

        map.add('\'', "   * ",
            "   * ",
            "  *  ",
            "     ",
            "     ",
            "     ",
            "     ");

        map.add('"', " * * ",
            " * * ",
            "     ",
            "     ",
            "     ",
            "     ",
            "     ");

        map.add('{', "    *",
            "  ** ",
            "  *  ",
            " *   ",
            "  *  ",
            "  ** ",
            "    *");

        map.add('}', "*    ",
            " **  ",
            "  *  ",
            "   * ",
            "  *  ",
            " **  ",
            "*    ");

        map.add('[', " *** ",
            " *   ",
            " *   ",
            " *   ",
            " *   ",
            " *   ",
            " *** ");

        map.add(']', " *** ",
            "   * ",
            "   * ",
            "   * ",
            "   * ",
            "   * ",
            " *** ");

        this.map = map;
    }

    character(c, degrees) {
        const coords = [];
        this.map.get(c).forEach((coord) => {
            coords.push(MessageBlips.translate(degrees, coord))
        })
        return coords;
    }

    word(s) {
        const coords = [];
        const spacing = 26;
        let angle = (s.length % 2 !== 0) ?
            90 + (s.length / 2) * spacing :
            (90 - spacing / 2) + (s.length / 2) * spacing;

        for (let i = 0; i < s.length; i++) {
            this.character(s.charAt(i), angle).forEach((coord) => coords.push(coord));
            angle -= spacing;
        }

        return coords;
    }

    static translate(degrees, coord) {
        degrees -= 90;
        const aradians = degrees * Math.PI / 180;
        let x = 60 - coord.x;
        let y = 60 - coord.y;

        let d = Math.sqrt(x*x + y*y);
        let oradians = Math.atan2(x, y) + aradians;

        return {
            x: Math.trunc(60 + (d * Math.cos(oradians))),
            y: Math.trunc(60 - (d * Math.sin(oradians)))
        }
    }
}

class CharacterMap {
    constructor() {
        this.chars = new Map();
    }

    add(c, ...s) {
        const coords = [];
        for (let i = 0; i < s.length; i++) {
            CharacterMap.pointsFromString(s[i], i).forEach((coord) => coords.push(coord))
        }
        this.chars.set(c, coords);
    }

    get(c) {
        return this.chars.get(c);
    }

    static pointsFromString(s, lineNumber) {
        const coords = [];
        for (let i = 0; i < s.length; i++) {
            const chr = s.charAt(i)
            if (chr === " ") {
                continue;
            }

            coords.push({
                x: ((i - 2) * 3) + 60,
                y: (lineNumber * 3) + 12,
            })
        }

        return coords;
    }
}
